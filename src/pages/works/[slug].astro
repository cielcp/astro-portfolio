---
import Layout from '../../layouts/Base.astro';
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
import PortableTextRenderer from '../../components/PortableTextRenderer.astro';

const WORK_QUERY = `*[_type == "work" && slug.current == $slug][0]`;
const work = await sanityClient.fetch<SanityDocument>(WORK_QUERY, Astro.params);

export async function getStaticPaths(): Promise<{ params: { slug: string } }> {
  const SLUGS_QUERY = `*[_type == "work" && defined(slug.current)]{
    "params": {"slug": slug.current}
  }`;
  return await sanityClient.fetch(SLUGS_QUERY, Astro.params);
}

const { projectId, dataset } = sanityClient.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;
const workImageUrl = work.image
  ? urlFor(work.image)?.width(550).height(310).url()
  : null;
---

<Layout>
  <!-- Hero Section -->
<section class="bg-dark-beige border-b border-dark">
  
  <div class="container-custom min-h-screen flex flex-col gap-8 pt-24">
    <!-- Overline -->
    <div class="flex justify-between py-4 border-t border-black">
      <h3>{work.title}</h3> 
      <h4>
        {work.tags && work.tags.length > 0 
          ? work.tags.join(' âœ¦ ')
          : ''
        }
      </h4>
    </div>
    <!-- Title -->
    <h1>{work.headline}</h1>
    <!-- Work Summary -->
     <div class="flex py-10 gap-10">
      <div class="w-3/5">
        <h3 class="pb-4">Summary</h3> 
        <p>{Array.isArray(work.summary) && <PortableTextRenderer value={work.summary}/>}</p>
      </div>
      <div class="w-1/5">
        <h3 class="pb-4">My Role</h3> 
        <p>{work.role}</p>
      </div>
      <div class="w-1/5">
        <h3 class="pb-4">Timeline</h3> 
        <p>{work.timeline}</p>
      </div>
     </div>
      
  </div>
</section>
  
  <div class="container-custom-small py-20">
    {Array.isArray(work.body) && <PortableTextRenderer value={work.body} />}
  </div>
</Layout>
